{
  "generated_at": "2025-01-08T22:59:00Z",
  "application_name": "NatureEstate",
  "description": "A real estate platform specializing in scenic properties with natural beauty and breathtaking views",
  "tech_stack": [
    "React 18.3.1",
    "TypeScript 5.5.3", 
    "Vite 5.4.0",
    "Node.js",
    "Express 4.19.2",
    "PostgreSQL",
    "Tailwind CSS 3.4.8",
    "Zustand (State Management)",
    "React Query (TanStack Query 5.0.0)",
    "React Router DOM 6.26.0",
    "Radix UI Components",
    "Axios 1.7.7",
    "JWT Authentication",
    "Zod Validation"
  ],
  "architecture": {
    "frontend": {
      "framework": "React with TypeScript",
      "build_tool": "Vite",
      "styling": "Tailwind CSS with Radix UI components",
      "state_management": "Zustand with persistence",
      "routing": "React Router DOM",
      "api_client": "Axios with React Query"
    },
    "backend": {
      "framework": "Express.js with TypeScript",
      "database": "PostgreSQL",
      "authentication": "JWT tokens",
      "validation": "Zod schemas",
      "file_uploads": "Multer",
      "cors": "Enabled for frontend integration"
    }
  },
  "features": [
    {
      "name": "User Authentication",
      "description": "Complete authentication system with registration, login, password reset, and email verification",
      "files": [
        "vitereact/src/components/views/UV_Login.tsx",
        "vitereact/src/components/views/UV_Registration.tsx", 
        "vitereact/src/components/views/UV_PasswordReset.tsx",
        "backend/server.ts (auth routes)"
      ],
      "endpoints": [
        "POST /auth/register",
        "POST /auth/login", 
        "POST /auth/logout",
        "POST /auth/forgot-password",
        "POST /auth/reset-password",
        "POST /auth/verify-email",
        "POST /auth/refresh-token"
      ]
    },
    {
      "name": "Property Listings",
      "description": "Comprehensive property management with search, filtering, and detailed views",
      "files": [
        "vitereact/src/components/views/UV_SearchResults.tsx",
        "vitereact/src/components/views/UV_PropertyDetails.tsx",
        "vitereact/src/components/views/UV_CreateListing.tsx",
        "vitereact/src/components/views/UV_MyListings.tsx"
      ],
      "endpoints": [
        "GET /properties",
        "POST /properties",
        "GET /properties/:property_id",
        "PUT /properties/:property_id",
        "DELETE /properties/:property_id"
      ]
    },
    {
      "name": "Property Photos",
      "description": "Photo gallery management for property listings",
      "files": [
        "backend/server.ts (photo routes)"
      ],
      "endpoints": [
        "GET /properties/:property_id/photos",
        "POST /properties/:property_id/photos",
        "PUT /properties/:property_id/photos/:photo_id",
        "DELETE /properties/:property_id/photos/:photo_id"
      ]
    },
    {
      "name": "Property Inquiries",
      "description": "Inquiry system for property interest and communication",
      "files": [
        "vitereact/src/components/views/UV_InquiryManagement.tsx"
      ],
      "endpoints": [
        "GET /properties/:property_id/inquiries",
        "POST /properties/:property_id/inquiries",
        "GET /inquiries",
        "GET /inquiries/:inquiry_id",
        "PUT /inquiries/:inquiry_id",
        "GET /inquiries/:inquiry_id/responses",
        "POST /inquiries/:inquiry_id/responses"
      ]
    },
    {
      "name": "Saved Properties",
      "description": "User favorites and saved property management",
      "files": [
        "vitereact/src/components/views/UV_SavedProperties.tsx"
      ],
      "endpoints": [
        "GET /saved-properties",
        "POST /saved-properties",
        "PUT /saved-properties/:saved_property_id",
        "DELETE /saved-properties/:saved_property_id"
      ]
    },
    {
      "name": "User Dashboard",
      "description": "Personalized dashboard with user statistics and activity",
      "files": [
        "vitereact/src/components/views/UV_UserDashboard.tsx",
        "vitereact/src/components/views/UV_ProfileSettings.tsx"
      ],
      "endpoints": [
        "GET /users/me",
        "PUT /users/me",
        "DELETE /users/me",
        "GET /dashboard/stats"
      ]
    },
    {
      "name": "Landing Page",
      "description": "Marketing landing page with featured properties and search",
      "files": [
        "vitereact/src/components/views/UV_Landing.tsx"
      ],
      "features": [
        "Hero carousel with property images",
        "Featured properties showcase",
        "Country-based property browsing",
        "Quick search form",
        "Value proposition sections"
      ]
    },
    {
      "name": "Navigation System",
      "description": "Responsive navigation with mobile support",
      "files": [
        "vitereact/src/components/views/GV_TopNav.tsx",
        "vitereact/src/components/views/GV_MobileNav.tsx",
        "vitereact/src/components/views/GV_Footer.tsx"
      ]
    },
    {
      "name": "Search & Analytics",
      "description": "Property search with analytics and history tracking",
      "endpoints": [
        "GET /search-history",
        "POST /search-history",
        "GET /properties/:property_id/analytics",
        "POST /properties/:property_id/view"
      ]
    },
    {
      "name": "Notifications",
      "description": "User notification system for inquiries and updates",
      "endpoints": [
        "GET /notifications",
        "PUT /notifications/:notification_id/read",
        "PUT /notifications/mark-all-read"
      ]
    }
  ],
  "database_tables": [
    "users",
    "properties", 
    "property_photos",
    "property_inquiries",
    "saved_properties",
    "saved_searches",
    "search_history",
    "notifications",
    "property_views",
    "user_sessions",
    "property_analytics",
    "inquiry_responses",
    "system_settings"
  ],
  "api_endpoints": [
    "/auth/register",
    "/auth/login",
    "/auth/logout", 
    "/auth/forgot-password",
    "/auth/reset-password",
    "/auth/verify-email",
    "/auth/refresh-token",
    "/users/me",
    "/users/:user_id",
    "/properties",
    "/properties/:property_id",
    "/properties/:property_id/photos",
    "/properties/:property_id/inquiries",
    "/inquiries",
    "/saved-properties",
    "/saved-searches",
    "/notifications",
    "/dashboard/stats",
    "/search-history"
  ],
  "key_components": {
    "state_management": {
      "file": "vitereact/src/store/main.tsx",
      "description": "Zustand store with persistence for authentication, search, saved properties, and notifications"
    },
    "routing": {
      "file": "vitereact/src/App.tsx", 
      "description": "React Router setup with protected routes and user type restrictions"
    },
    "authentication": {
      "middleware": "authenticateToken and optionalAuth in backend/server.ts",
      "description": "JWT-based authentication with session management"
    }
  },
  "special_features": [
    "Scenic property specialization with natural features",
    "Country-based property browsing",
    "Property view tracking and analytics", 
    "Inquiry response threading",
    "Email notifications (mock implementation)",
    "Image processing placeholders",
    "Responsive design with mobile navigation",
    "Protected routes based on user types (buyer/seller/agent/admin)",
    "Property favorites with local storage persistence",
    "Search history tracking"
  ],
  "development_notes": [
    "Database uses direct password storage (no hashing) for development",
    "Email service is mocked for development",
    "Image processing is mocked with placeholder URLs",
    "Uses Picsum for placeholder property images",
    "Build configuration fixed to use 'dist' instead of 'public'",
    "Application title updated from generic Vite template"
  ]
}